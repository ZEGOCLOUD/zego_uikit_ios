// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ZegoUIKitSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Foundation/*.NSObject*/
import Swift
import UIKit
import ZegoExpressEngine
import _Concurrency
import _StringProcessing
extension ZegoUIKitSDK.ZegoUIKit {
  public func joinRoom(_ userID: Swift.String, userName: Swift.String, roomID: Swift.String, markAsLargeRoom: Swift.Bool = false)
  public func leaveRoom()
  public func setRoomProperty(_ key: Swift.String, value: Swift.String, callback: ZegoUIKitSDK.ZegoUIKitCallBack?)
  public func getRoomProperties() -> [Swift.String : Swift.String]
  public func updateRoomProperties(_ roomProperties: [Swift.String : Swift.String], callback: ZegoUIKitSDK.ZegoUIKitCallBack?)
  public func removeUserFromRoom(_ userIDs: [Swift.String])
}
@objc @_inheritsConvenienceInitializers public class ZegoLayoutConfig : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol ZegoStartInvitationButtonDelegate {
  @objc func onStartInvitationButtonClick(_ data: [Swift.String : Swift.AnyObject]?)
}
@objc @_Concurrency.MainActor(unsafe) open class ZegoStartInvitationButton : UIKit.UIButton {
  @objc @_Concurrency.MainActor(unsafe) public var icon: UIKit.UIImage? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var text: Swift.String? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var invitees: [Swift.String]
  @objc @_Concurrency.MainActor(unsafe) public var data: Swift.String?
  @objc @_Concurrency.MainActor(unsafe) public var timeout: Swift.UInt32
  @objc @_Concurrency.MainActor(unsafe) public var type: Swift.Int
  @objc @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoStartInvitationButtonDelegate?
  @objc @_Concurrency.MainActor(unsafe) public init(_ type: Swift.Int)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) open func buttonClick()
  @objc deinit
}
@objc @objcMembers open class ZegoInRoomMessage : ObjectiveC.NSObject {
  @objc public var message: Swift.String?
  @objc public var messageID: Swift.Int64
  @objc public var sendTime: Swift.UInt64
  @objc public var user: ZegoUIKitSDK.ZegoUIKitUser?
  @objc public var state: ZegoUIKitSDK.ZegoInRoomMessageState
  @objc public init(_ message: Swift.String, messageID: Swift.Int64, sendTime: Swift.UInt64, user: ZegoUIKitSDK.ZegoUIKitUser)
  @objc deinit
}
public protocol LeaveButtonDelegate : AnyObject {
  func onLeaveButtonClick(_ isLeave: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers public class ZegoLeaveConfirmDialogInfo : ObjectiveC.NSObject {
  public var title: Swift.String?
  public var message: Swift.String?
  public var cancelButtonName: Swift.String?
  public var confirmButtonName: Swift.String?
  weak public var dialogPresentVC: UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class ZegoLeaveButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.LeaveButtonDelegate?
  @_Concurrency.MainActor(unsafe) public var quitConfirmDialogInfo: ZegoUIKitSDK.ZegoLeaveConfirmDialogInfo
  @_Concurrency.MainActor(unsafe) public var iconLeave: UIKit.UIImage {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public protocol ToggleMicrophoneButtonDelegate : AnyObject {
  func onToggleMicButtonClick(_ isOn: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoToggleMicrophoneButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public var userID: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var isOn: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ToggleMicrophoneButtonDelegate?
  @_Concurrency.MainActor(unsafe) public var iconMicrophoneOn: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var iconMicrophoneOff: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public protocol ZegoCancelInvitationButtonDelegate : AnyObject {
  func onCancelInvitationButtonClick()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class ZegoCancelInvitationButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public var icon: UIKit.UIImage {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var text: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var invitees: [Swift.String]
  @_Concurrency.MainActor(unsafe) public var data: Swift.String?
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoCancelInvitationButtonDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) open func buttonClick()
  @objc deinit
}
public protocol ZegoSwitchCameraButtonDelegate : AnyObject {
  func onSwitchCameraButtonClick(_ isFrontFacing: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class ZegoSwitchCameraButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoSwitchCameraButtonDelegate?
  @_Concurrency.MainActor(unsafe) public var iconFrontFacingCamera: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var iconBackFacingCamera: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var isFrontFacing: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_Concurrency.MainActor(unsafe) public class ZegoCameraStateIcon : UIKit.UIImageView {
  @_Concurrency.MainActor(unsafe) public var userID: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var iconCameraOn: UIKit.UIImage?
  @_Concurrency.MainActor(unsafe) public var iconCameraOff: UIKit.UIImage?
  @_Concurrency.MainActor(unsafe) public var isOn: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ZegoUIKitSDK.ZegoUIKit {
  public func login(_ userID: Swift.String, userName: Swift.String)
  public func getUser(_ userID: Swift.String) -> ZegoUIKitSDK.ZegoUIKitUser?
  public func getAllUsers() -> [ZegoUIKitSDK.ZegoUIKitUser]
}
public protocol ZegoAcceptInvitationButtonDelegate : AnyObject {
  func onAcceptInvitationButtonClick()
}
@objc @_Concurrency.MainActor(unsafe) public class ZegoAcceptInvitationButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public var icon: UIKit.UIImage {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var text: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoAcceptInvitationButtonDelegate?
  @_Concurrency.MainActor(unsafe) public var inviterID: Swift.String?
  @_Concurrency.MainActor(unsafe) public init(_ inviterID: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoInRoomNotificationViewConfig : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol ZegoInRoomNotificationViewDelegate {
  @objc optional func getJoinCell(_ tableView: UIKit.UITableView, indexPath: Foundation.IndexPath, uiKitUser: ZegoUIKitSDK.ZegoUIKitUser) -> UIKit.UITableViewCell?
  @objc optional func getLeaveCell(_ tableView: UIKit.UITableView, indexPath: Foundation.IndexPath, uiKitUser: ZegoUIKitSDK.ZegoUIKitUser) -> UIKit.UITableViewCell?
  @objc optional func getMessageCell(_ tableView: UIKit.UITableView, indexPath: Foundation.IndexPath, inRoomMessage: ZegoUIKitSDK.ZegoInRoomMessage) -> UIKit.UITableViewCell?
  @objc optional func getJoinCellHeight(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath, uiKitUser: ZegoUIKitSDK.ZegoUIKitUser) -> CoreFoundation.CGFloat
  @objc optional func getLeaveCellHeight(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath, uiKitUser: ZegoUIKitSDK.ZegoUIKitUser) -> CoreFoundation.CGFloat
  @objc optional func getMessageCellHeight(_ tableView: UIKit.UITableView, indexPath: Foundation.IndexPath, inRoomMessage: ZegoUIKitSDK.ZegoInRoomMessage) -> CoreFoundation.CGFloat
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoInRoomNotificationView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoInRoomNotificationViewDelegate?
  @_Concurrency.MainActor(unsafe) public init(frame: CoreFoundation.CGRect, config: ZegoUIKitSDK.ZegoInRoomNotificationViewConfig?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var frame: CoreFoundation.CGRect {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func registerCell(_ cellClass: Swift.AnyClass?, forCellReuseIdentifier: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func registerNibCell(_ nib: UIKit.UINib?, forCellReuseIdentifier: Swift.String)
  @objc deinit
}
public typealias PluginCallBack = (_ data: Swift.Dictionary<Swift.String, Swift.AnyObject>?) -> ()
public enum ZegoUIKitPluginType : Swift.String {
  case signaling
  case beauty
  case whiteboard
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@objc @_inheritsConvenienceInitializers open class ZegoUIKitPlugin : ObjectiveC.NSObject {
  open func getPluginType() -> ZegoUIKitSDK.ZegoUIKitPluginType?
  open func getVersion() -> Swift.String?
  open func invoke(_ method: Swift.String, params: Swift.Dictionary<Swift.String, Swift.AnyObject>?, callBack: ZegoUIKitSDK.PluginCallBack?)
  open func registerPluginEventHandler(_ object: ZegoUIKitSDK.ZegoPluginEventHandle)
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol ZegoPluginEventHandle {
  @objc optional func onPluginEvent(_ event: Swift.String, data: Swift.Dictionary<Swift.String, Swift.AnyObject>?)
}
@objc public protocol ZegoInRoomMessageInputDelegate {
  @objc func onSubmit()
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoInRoomMessageInput : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoInRoomMessageInputDelegate?
  @objc @_Concurrency.MainActor(unsafe) public var placeHolder: Swift.String? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var iconSend: UIKit.UIImage? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var enable: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var minHeight: CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc @_Concurrency.MainActor(unsafe) public func startEdit()
  @objc deinit
}
public enum ZegoUIKitVideoFillMode : Swift.UInt {
  case aspectFit
  case aspectFill
  case scaleToFill
  public init?(rawValue: Swift.UInt)
  public typealias RawValue = Swift.UInt
  public var rawValue: Swift.UInt {
    get
  }
}
public enum ZegoUIKitLayoutMode : Swift.UInt {
  case pictureInPicture
  case gallery
  case invalid
  public init?(rawValue: Swift.UInt)
  public typealias RawValue = Swift.UInt
  public var rawValue: Swift.UInt {
    get
  }
}
public enum ZegoViewPosition : Swift.Int {
  case topLeft
  case topRight
  case bottomLeft
  case bottomRight
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum ZegoUIKitRoomStateChangedReason : Swift.UInt {
  case logining = 0
  case logined = 1
  case loginFailed = 2
  case reconnecting = 3
  case reconnected = 4
  case reconnectFailed = 5
  case kickOut = 6
  case logout = 7
  case logoutFailed = 8
  public init?(rawValue: Swift.UInt)
  public typealias RawValue = Swift.UInt
  public var rawValue: Swift.UInt {
    get
  }
}
@objc public enum ZegoUIKitAudioOutputDevice : Swift.UInt {
  case speaker = 0
  case headphone = 1
  case bluetooth = 2
  case earSpeaker = 3
  case externalUSB = 4
  case airPlay = 5
  public init?(rawValue: Swift.UInt)
  public typealias RawValue = Swift.UInt
  public var rawValue: Swift.UInt {
    get
  }
}
@objc public enum ZegoInRoomMessageState : Swift.Int {
  case idle
  case sending
  case success
  case failed
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum ZegoPluginConnectionState : Swift.Int {
  case disconnected
  case connecting
  case connected
  case reconnecting
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum ZegoAvatarAlignment : Swift.Int {
  case center
  case start
  case end
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public typealias ZegoUIKitSendMessageCallback = (Swift.Result<Any, Swift.Error>) -> Swift.Void
public typealias ZegoSendInRoomCommnadCallback = (_ errorCode: Swift.Int32) -> Swift.Void
extension ZegoUIKitSDK.ZegoUIKit {
  public func getInRoomMessages() -> [ZegoUIKitSDK.ZegoInRoomMessage]
  public func sendInRoomMessage(_ message: Swift.String)
  public func resendInRoomMessage(_ message: ZegoUIKitSDK.ZegoInRoomMessage)
  public func sendInRoomCommand(_ command: Swift.String, toUserIDs: [Swift.String], callback: ZegoUIKitSDK.ZegoSendInRoomCommnadCallback?)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ZegoUIKitUser : ObjectiveC.NSObject, Swift.Codable {
  public var userID: Swift.String?
  public var userName: Swift.String?
  public var isCameraOn: Swift.Bool
  public var isMicrophoneOn: Swift.Bool
  public var inRoomAttributes: [Swift.String : Swift.String]
  public init(_ userID: Swift.String, _ userName: Swift.String, _ isCameraOn: Swift.Bool = false, _ isMicrophoneOn: Swift.Bool = false)
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public protocol ToggleAudioOutputButtonDelegate : AnyObject {
  func onAudioOutputButtonClick(_ isSpeaker: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class ZegoSwitchAudioOutputButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public var iconSpeaker: UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public var iconEarSpeaker: UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public var iconBluetooth: UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public var useSpeaker: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ToggleAudioOutputButtonDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public typealias ZegoUIKitCallBack = (_ data: Swift.Dictionary<Swift.String, Swift.AnyObject>?) -> ()
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ZegoUIKit : ObjectiveC.NSObject {
  public static let shared: ZegoUIKitSDK.ZegoUIKit
  public var localUserInfo: ZegoUIKitSDK.ZegoUIKitUser?
  public var userList: [ZegoUIKitSDK.ZegoUIKitUser] {
    get
  }
  final public let room: ZegoUIKitSDK.ZegoUIKitRoom?
  public var enableAudioVideoPlaying: Swift.Bool {
    get
    set
  }
  public func initWithAppID(appID: Swift.UInt32, appSign: Swift.String)
  public func uninit()
  public func getVersion() -> Swift.String
  public func addEventHandler(_ eventHandle: ZegoUIKitSDK.ZegoUIKitEventHandle?)
  public static func getSignalingPlugin() -> ZegoUIKitSDK.ZegoUIKitSignalingPluginImpl
  @objc deinit
}
public protocol ZegoRefuseInvitationButtonDelegate : AnyObject {
  func onRefuseInvitationButtonClick()
}
@objc @_Concurrency.MainActor(unsafe) public class ZegoRefuseInvitationButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public var icon: UIKit.UIImage {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var text: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoRefuseInvitationButtonDelegate?
  @_Concurrency.MainActor(unsafe) public var inviterID: Swift.String?
  @_Concurrency.MainActor(unsafe) public var data: Swift.String?
  @_Concurrency.MainActor(unsafe) public init(_ inviterID: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) public func buttonClick()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoAudioVideoContainerView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) public func reload()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoInRoomMessageView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var frame: CoreFoundation.CGRect {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoLayout : ObjectiveC.NSObject {
  public var mode: ZegoUIKitSDK.ZegoUIKitLayoutMode
  public var config: ZegoUIKitSDK.ZegoLayoutConfig?
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIColor {
  public class func colorWithHexString(_ hexString: Swift.String, alpha: CoreFoundation.CGFloat = 1) -> UIKit.UIColor
}
@objc @_inheritsConvenienceInitializers public class ZegoLayoutGalleryConfig : ZegoUIKitSDK.ZegoLayoutConfig {
  public var addBorderRadiusAndSpacingBetweenView: Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
public protocol AudioVideoViewDelegate : AnyObject {
  func getForegroundView(_ userInfo: ZegoUIKitSDK.ZegoUIKitUser?) -> UIKit.UIView?
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoAudioVideoView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.AudioVideoViewDelegate? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var userID: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var roomID: Swift.String?
  @_Concurrency.MainActor(unsafe) public var audioViewBackgroudImage: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var showVoiceWave: Swift.Bool?
  @_Concurrency.MainActor(unsafe) public var soundWaveColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var videoFillMode: ZegoUIKitSDK.ZegoUIKitVideoFillMode {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var avatarAlignment: ZegoUIKitSDK.ZegoAvatarAlignment {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var avatarSize: CoreFoundation.CGSize? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func layoutSubviews()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoSignalingInRoomTextMessage : ObjectiveC.NSObject {
  public var messageID: Swift.Int64
  public var timestamp: Swift.Int64
  public var orderKey: Swift.Int64
  public var senderUserID: Swift.String?
  public var text: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@objc public class ZegoSignalingPluginNotificationConfig : ObjectiveC.NSObject {
  final public let resourceID: Swift.String
  final public let title: Swift.String
  final public let message: Swift.String
  public init(resourceID: Swift.String, title: Swift.String, message: Swift.String)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ZegoUIKitSignalingPluginImpl : ObjectiveC.NSObject {
  public static let shared: ZegoUIKitSDK.ZegoUIKitSignalingPluginImpl
  public func installPlugins(_ plugins: [ZegoUIKitSDK.ZegoUIKitPlugin])
  public func getPlugin(_ type: ZegoUIKitSDK.ZegoUIKitPluginType) -> ZegoUIKitSDK.ZegoUIKitPlugin?
  public func initWithAppID(appID: Swift.UInt32, appSign: Swift.String)
  public func uninit()
  public func login(_ userID: Swift.String, userName: Swift.String, callback: ZegoUIKitSDK.PluginCallBack?)
  public func loginOut()
  public func sendInvitation(_ invitees: [Swift.String], timeout: Swift.UInt32, type: Swift.Int, data: Swift.String?, notificationConfig: ZegoUIKitSDK.ZegoSignalingPluginNotificationConfig?, callback: ZegoUIKitSDK.PluginCallBack?)
  public func cancelInvitation(_ invitees: [Swift.String], data: Swift.String?, callback: ZegoUIKitSDK.PluginCallBack?)
  public func refuseInvitation(_ inviterID: Swift.String, data: Swift.String?)
  public func acceptInvitation(_ inviterID: Swift.String, data: Swift.String?)
  public func joinRoom(roomID: Swift.String, callback: ZegoUIKitSDK.PluginCallBack?)
  public func leaveRoom(_ callBack: ZegoUIKitSDK.PluginCallBack?)
  public func getRoomProperties() -> [Swift.String : Swift.String]?
  public func setUsersInRoomAttributes(_ key: Swift.String, value: Swift.String, userIDs: [Swift.String], roomID: Swift.String, callBack: ZegoUIKitSDK.PluginCallBack?)
  public func queryUsersInRoomAttributes(_ config: ZegoUIKitSDK.ZegoUsersInRoomAttributesQueryConfig, callBack: ZegoUIKitSDK.PluginCallBack?)
  public func updateRoomProperty(_ key: Swift.String, value: Swift.String, isDeleteAfterOwnerLeft: Swift.Bool = false, isForce: Swift.Bool = false, isUpdateOwner: Swift.Bool = false, callback: ZegoUIKitSDK.PluginCallBack?)
  public func deleteRoomProperties(_ keys: [Swift.String], isForce: Swift.Bool = false, callBack: ZegoUIKitSDK.PluginCallBack?)
  public func beginRoomPropertiesBatchOperation(_ isForce: Swift.Bool = false, isDeleteAfterOwnerLeft: Swift.Bool = false, isUpdateOwner: Swift.Bool = false)
  public func endRoomPropertiesBatchOperation(_ callBack: ZegoUIKitSDK.PluginCallBack?)
  public func queryRoomProperties(_ callBack: ZegoUIKitSDK.PluginCallBack?)
  public func enableNotifyWhenAppRunningInBackgroundOrQuit(_ enable: Swift.Bool, isSandboxEnvironment: Swift.Bool)
  public func setRemoteNotificationsDeviceToken(_ deviceToken: Foundation.Data)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoUserInRoomAttributesInfo : ObjectiveC.NSObject {
  public var userID: Swift.String?
  public var attributes: [Swift.String : Swift.String]
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoUsersInRoomAttributesQueryConfig : ObjectiveC.NSObject {
  public var nextFlag: Swift.String
  public var count: Swift.Int
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoAudioVideoViewConfig : ObjectiveC.NSObject {
  public var showSoundWavesInAudioMode: Swift.Bool
  public var useVideoViewAspectFill: Swift.Bool
  public var avatarAlignment: ZegoUIKitSDK.ZegoAvatarAlignment
  public var avatarSize: CoreFoundation.CGSize?
  @objc override dynamic public init()
  @objc deinit
}
public protocol ZegoToggleCameraButtonDelegate : AnyObject {
  func onToggleCameraButtonClick(_ isOn: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class ZegoToggleCameraButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoToggleCameraButtonDelegate?
  @_Concurrency.MainActor(unsafe) public var userID: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var iconCameraOn: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var iconCameraOff: UIKit.UIImage? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var isOn: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) public func buttonClick(sender: UIKit.UIButton)
  @objc deinit
}
public enum ZegoPluginMethodName : Swift.String {
  case init_method
  case uinit_method
  case login_method
  case logout_method
  case sendInvitation_method
  case cancelInvitation_method
  case refuseInvitation_method
  case acceptInvitation_method
  case onCallInvitationReceived_method
  case onCallInvitationCancelled_method
  case onCallInvitationAccepted_method
  case onCallInvitationRejected_method
  case onCallInvitationTimeout_method
  case onCallInviteesAnsweredTimeout_method
  case onConnectionStateChanged_method
  case joinRoom_metnod
  case leaveRoom_metnod
  case getUsersInRoomAttributes_method
  case setUsersInRoomAttributes_method
  case queryUsersInRoomAttributes_method
  case updateRoomProperty_method
  case deleteRoomProperties_method
  case beginRoomPropertiesBatchOperation_method
  case endRoomPropertiesBatchOperation_method
  case queryRoomProperties_method
  case onUsersInRoomAttributesUpdated_method
  case onRoomPropertiesUpdated_method
  case onRoomMemberLeft_method
  case onRoomTextMessageReceive_method
  case onEnableNotifyWhenAppRunningInBackgroundOrQuit_method
  case onSetRemoteNotificationsDeviceToken_method
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol ZegoAudioVideoContainerDelegate : AnyObject {
  func getForegroundView(_ userInfo: ZegoUIKitSDK.ZegoUIKitUser?) -> UIKit.UIView?
  func sortAudioVideo(_ userList: [ZegoUIKitSDK.ZegoUIKitUser]) -> [ZegoUIKitSDK.ZegoUIKitUser]?
}
@objc @_inheritsConvenienceInitializers public class ZegoAudioVideoContainer : ObjectiveC.NSObject {
  weak public var delegate: ZegoUIKitSDK.ZegoAudioVideoContainerDelegate?
  public var view: ZegoUIKitSDK.ZegoAudioVideoContainerView!
  @objc override dynamic public init()
  public func setLayout(_ mode: ZegoUIKitSDK.ZegoUIKitLayoutMode, config: ZegoUIKitSDK.ZegoLayoutConfig, audioVideoConfig: ZegoUIKitSDK.ZegoAudioVideoViewConfig)
  public func setLayout(_ layout: ZegoUIKitSDK.ZegoLayout, audioVideoConfig: ZegoUIKitSDK.ZegoAudioVideoViewConfig)
  public func reload()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ZegoLayoutPictureInPictureConfig : ZegoUIKitSDK.ZegoLayoutConfig {
  public var isSmallViewDraggable: Swift.Bool
  public var smallViewBackgroundColor: UIKit.UIColor
  public var largeViewBackgroundColor: UIKit.UIColor
  public var smallViewBackgroundImage: UIKit.UIImage?
  public var largeViewBackgroundImage: UIKit.UIImage?
  public var smallViewPostion: ZegoUIKitSDK.ZegoViewPosition
  public var switchLargeOrSmallViewByClick: Swift.Bool
  public var smallViewSize: CoreFoundation.CGSize
  public var spacingBetweenSmallViews: CoreFoundation.CGFloat
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ZegoUIKitRoom : ObjectiveC.NSObject {
  public var roomID: Swift.String?
  public init(_ roomID: Swift.String)
  @objc deinit
}
@objc public protocol ZegoMemberListDelegate {
  @objc optional func getMemberListItemView(_ tableView: UIKit.UITableView, indexPath: Foundation.IndexPath, userInfo: ZegoUIKitSDK.ZegoUIKitUser) -> UIKit.UITableViewCell?
  @objc optional func getMemberListItemHeight(_ userInfo: ZegoUIKitSDK.ZegoUIKitUser) -> CoreFoundation.CGFloat
  @objc optional func getMemberListHeaderHeight(_ tableView: UIKit.UITableView, section: Swift.Int) -> CoreFoundation.CGFloat
  @objc optional func getMemberListviewForHeaderInSection(_ tableView: UIKit.UITableView, section: Swift.Int) -> UIKit.UIView?
  @objc optional func sortUserList(_ userList: [ZegoUIKitSDK.ZegoUIKitUser]) -> [ZegoUIKitSDK.ZegoUIKitUser]
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoMemberList : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoMemberListDelegate?
  @_Concurrency.MainActor(unsafe) public var showMicrophoneState: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var showCameraState: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var tableView: UIKit.UITableView {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc @_Concurrency.MainActor(unsafe) public func registerCell(_ cellClass: Swift.AnyClass?, forCellReuseIdentifier: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func registerNibCell(_ nib: UIKit.UINib?, forCellReuseIdentifier: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func reloadData()
  @objc deinit
}
@objc public protocol ZegoInRoomChatViewDelegate {
  @objc optional func getChatViewItemView(_ tableView: UIKit.UITableView, indexPath: Foundation.IndexPath, message: ZegoUIKitSDK.ZegoInRoomMessage) -> UIKit.UITableViewCell?
  @objc optional func getChatViewItemHeight(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath, message: ZegoUIKitSDK.ZegoInRoomMessage) -> CoreFoundation.CGFloat
  @objc optional func getChatViewHeaderHeight(_ tableView: UIKit.UITableView, section: Swift.Int) -> CoreFoundation.CGFloat
  @objc optional func getChatViewForHeaderInSection(_ tableView: UIKit.UITableView, section: Swift.Int) -> UIKit.UIView?
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ZegoInRoomChatView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) weak public var delegate: ZegoUIKitSDK.ZegoInRoomChatViewDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc @_Concurrency.MainActor(unsafe) public func registerCell(_ cellClass: Swift.AnyClass?, forCellReuseIdentifier: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func registerNibCell(_ nib: UIKit.UINib?, forCellReuseIdentifier: Swift.String)
  @_Concurrency.MainActor(unsafe) public func scrollToLastLine()
  @objc deinit
}
@objc public protocol ZegoUIKitEventHandle {
  @objc optional func onRemoteUserJoin(_ userList: [ZegoUIKitSDK.ZegoUIKitUser])
  @objc optional func onRemoteUserLeave(_ userList: [ZegoUIKitSDK.ZegoUIKitUser])
  @objc optional func onOnlySelfInRoom()
  @objc optional func onUserCountOrPropertyChanged(_ userList: [ZegoUIKitSDK.ZegoUIKitUser]?)
  @objc optional func onRoomStateChanged(_ reason: ZegoUIKitSDK.ZegoUIKitRoomStateChangedReason, errorCode: Swift.Int32, extendedData: [Swift.AnyHashable : Any], roomID: Swift.String)
  @objc optional func onRoomPropertyUpdated(_ key: Swift.String, oldValue: Swift.String, newValue: Swift.String)
  @objc optional func onRoomPropertiesFullUpdated(_ updateKeys: [Swift.String], oldProperties: [Swift.String : Swift.String], properties: [Swift.String : Swift.String])
  @objc optional func onCameraOn(_ user: ZegoUIKitSDK.ZegoUIKitUser, isOn: Swift.Bool)
  @objc optional func onMicrophoneOn(_ user: ZegoUIKitSDK.ZegoUIKitUser, isOn: Swift.Bool)
  @objc optional func onSoundLevelUpdate(_ userInfo: ZegoUIKitSDK.ZegoUIKitUser, level: Swift.Double)
  @objc optional func onAudioVideoAvailable(_ userList: [ZegoUIKitSDK.ZegoUIKitUser])
  @objc optional func onAudioVideoUnavailable(_ userList: [ZegoUIKitSDK.ZegoUIKitUser])
  @objc optional func onAudioOutputDeviceChange(_ audioRoute: ZegoUIKitSDK.ZegoUIKitAudioOutputDevice)
  @objc optional func onInvitationReceived(_ inviter: ZegoUIKitSDK.ZegoUIKitUser, type: Swift.Int, data: Swift.String?)
  @objc optional func onInvitationTimeout(_ inviter: ZegoUIKitSDK.ZegoUIKitUser, data: Swift.String?)
  @objc optional func onInvitationResponseTimeout(_ invitees: [ZegoUIKitSDK.ZegoUIKitUser], data: Swift.String?)
  @objc optional func onInvitationAccepted(_ invitee: ZegoUIKitSDK.ZegoUIKitUser, data: Swift.String?)
  @objc optional func onInvitationRefused(_ invitee: ZegoUIKitSDK.ZegoUIKitUser, data: Swift.String?)
  @objc optional func onInvitationCanceled(_ inviter: ZegoUIKitSDK.ZegoUIKitUser, data: Swift.String?)
  @objc optional func onInRoomMessageReceived(_ messageList: [ZegoUIKitSDK.ZegoInRoomMessage])
  @objc optional func onInRoomMessageSendingStateChanged(_ message: ZegoUIKitSDK.ZegoInRoomMessage)
  @objc optional func onSignalingPluginConnectionState(_ params: [Swift.String : Swift.AnyObject])
  @objc optional func onInRoomCommandReceived(_ fromUser: ZegoUIKitSDK.ZegoUIKitUser, command: Swift.String)
  @objc optional func onInRoomTextMessageReceived(_ messages: [ZegoUIKitSDK.ZegoSignalingInRoomTextMessage], roomID: Swift.String)
  @objc optional func onUsersInRoomAttributesUpdated(_ updateKeys: [Swift.String]?, oldAttributes: [ZegoUIKitSDK.ZegoUserInRoomAttributesInfo]?, attributes: [ZegoUIKitSDK.ZegoUserInRoomAttributesInfo]?, editor: ZegoUIKitSDK.ZegoUIKitUser?)
  @objc optional func onRoomMemberLeft(_ userIDList: [Swift.String]?, roomID: Swift.String)
  @objc optional func onMeRemovedFromRoom()
  @objc optional func onTurnOnYourCameraRequest(_ fromUser: ZegoUIKitSDK.ZegoUIKitUser)
  @objc optional func onTurnOnYourMicrophoneRequest(_ fromUser: ZegoUIKitSDK.ZegoUIKitUser)
}
@objc @_Concurrency.MainActor(unsafe) public class ZegoMicrophoneStateIcon : UIKit.UIImageView {
  @_Concurrency.MainActor(unsafe) public var userID: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var iconMicophoneOn: UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public var iconMicrophoneOff: UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public var iconMicrophoneSpeaking: UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public var isOn: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ZegoUIKitSDK.ZegoUIKit {
  public func useFrontFacingCamera(isFrontFacing: Swift.Bool)
  public func setAudioOutputToSpeaker(enable: Swift.Bool)
  public func isMicrophoneOn(_ userID: Swift.String) -> Swift.Bool
  public func isCameraOn(_ userID: Swift.String) -> Swift.Bool
  public func turnMicrophoneOn(_ userID: Swift.String, isOn: Swift.Bool)
  public func turnCameraOn(_ userID: Swift.String, isOn: Swift.Bool)
  public func startPlayingAllAudioVideo()
  public func stopPlayingAllAudioVideo()
}
extension ZegoUIKitSDK.ZegoUIKitPluginType : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoUIKitPluginType : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoUIKitPluginType : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoUIKitVideoFillMode : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoUIKitVideoFillMode : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoUIKitVideoFillMode : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoUIKitLayoutMode : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoUIKitLayoutMode : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoUIKitLayoutMode : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoViewPosition : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoViewPosition : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoViewPosition : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoUIKitRoomStateChangedReason : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoUIKitRoomStateChangedReason : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoUIKitRoomStateChangedReason : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoUIKitAudioOutputDevice : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoUIKitAudioOutputDevice : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoUIKitAudioOutputDevice : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoInRoomMessageState : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoInRoomMessageState : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoInRoomMessageState : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoPluginConnectionState : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoPluginConnectionState : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoPluginConnectionState : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoAvatarAlignment : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoAvatarAlignment : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoAvatarAlignment : Swift.RawRepresentable {}
extension ZegoUIKitSDK.ZegoPluginMethodName : Swift.Equatable {}
extension ZegoUIKitSDK.ZegoPluginMethodName : Swift.Hashable {}
extension ZegoUIKitSDK.ZegoPluginMethodName : Swift.RawRepresentable {}
